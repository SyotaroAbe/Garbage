・タイトル
Garbage Separation（ごみ分別）
Just Separation（正しい分別）
Just Judgement（同上）

・マップランダム自動生成
map-arg

for(マップサイズ分繰り返す)
type rand 合計床パターン数
pos nCnt

マップ外へ行ける道がないか
いけない道ができていないか

上下左右方向へ進めるときと進めないときの４＊２パターンある
・進めるとき
	↑　縦直線、カーブ左上角、カーブ右上角、T字路上、T字路右、T字路左、十字路、行き止まり上
	→　横直線、カーブ右上角、カーブ右下角、T字路上、T字路右、T字路下、十字路、行き止まり右
	←　横直線、カーブ左上角、カーブ左下角、T字路上、T字路下、T字路左、十字路、行き止まり左
	↓　縦直線、カーブ右下角、カーブ左下角、T字路右、T字路下、T字路左、十字路、行き止まり下
・進めないとき
	↑　横直線、カーブ右下角、カーブ左下角、T字路下、行き止まり右、行き止まり下、行き止まり左
	→　縦直線、カーブ左上角、カーブ左下角、T字路左、行き止まり上、行き止まり下、行き止まり左
	←　縦直線、カーブ右上角、カーブ右下角、T字路右、行き止まり上、行き止まり右、行き止まり下
	↓　横直線、カーブ左上角、カーブ右上角、T字路上、行き止まり上、行き止まり右、行き止まり左
	
２方向以上の床ランダム配置判断
そいつ自身から見て
・右進める上進める
	カーブ左下角、T字路下、T字路左、十字路
・右進める上進めない
	直線横、カーブ左上角、T字路上、行き止まり左
・右進めない上進める
	直線縦、カーブ右下角、T字路右、行き止まり下
・右進めない上進めない
	カーブ右上角、行き止まり上、行き止まり右

・左側
	・左進める上進める
		カーブ右下角、T字路右、T字路下、十字路
	・左進める上進めない
		直線横、カーブ右上角、T字路上、行き止まり右
	・左進めない上進める
		直線縦、カーブ左下角、T字路左、行き止まり下
	・左進めない上進めない
		カーブ左上角、行き止まり上、行き止まり左

・左外側の場合
	・左進めない右進める上進める
		カーブ左下角、T字路左
	・左進めない右進める上進めない
		カーブ左上角、行き止まり左
	・左進めない右進めない上進める
		直線縦、行き止まり下
	・左進めない右進めない上進めない
		行き止まり上

・下外側の場合
	・下進めない右進める上進める
		カーブ左下角、T字路下
	・下進めない右進める上進めない
		直線横、行き止まり左
	・下進めない右進めない上進める
		カーブ右下角、行き止まり下
	・下進めない右進めない上進めない
		行き止まり左

マップでいけないところができないようにするために
・左下･･･その１つ右の床生成時に、左斜め上の床（Y＋１）を見てそれが下に続いていない場合、
左に続いている床を生成する。
・閉じ込め･･･全ての床が繋がっているか確認する。
床が生成された時にその床から繋がっている方向へどこまで繋がっているか確認。
横一列で見て下と上につながる道を最低限でも用意する。
床の数をカウント。最後の床を配置する前に、全ての道が行き止まりで止まったらダメだから、
生成する床を変更。
に床の配置する数と一致しているか確認。
一致していなかった場合、別の床にする。
（縦（横）一直線で見て、外側は内側方向に、内側は左右両方につづいているかを
チェックし、つづいていない場合一直線最後の床を修正。）
左下角の右。その左の床が左に進めない、一番下の上の床全てが下に進めない
４／１で見て、内側に一直線で繋がっているか。

・縦直線
	↑　○
	→　×
	←　×
	↓　○

・横直線
	↑　×
	→　○
	←　○
	↓　×
	
・カーブ左上角
	↑　×
	→　○
	←　×
	↓　○

・カーブ右上角
	↑　×
	→　×
	←　○
	↓　×
	
・カーブ右下角
	↑　○
	→　×
	←　○
	↓　×
	
・カーブ左下角
	↑　○
	→　○
	←　×
	↓　×
	
・T字路上
	↑　×
	→　○
	←　○
	↓　○
	
・T字路右
	↑　○
	→　×
	←　○
	↓　○
	
・T字路下
	↑　○
	→　○
	←　○
	↓　×
	
・T字路左
	↑　○
	→　○
	←　×
	↓　○
	
・十字路
	↑　○
	→　○
	←　○
	↓　○
	
・行き止まり上
	↑　×
	→　×
	←　×
	↓　○
	
・行き止まり右
	↑　×
	→　○
	←　×
	↓　×
	
・行き止まり下
	↑　○
	→　×
	←　×
	↓　×
	
・行き止まり左
	↑　×
	→　×
	←　○
	↓　×
	
外側に設定しなくてはならないもの
・上
	進めない↓
・右
	進めない←
・下
	進めない↑
・左
	進めない→
・角
	左上･･･カーブ左上角、行き止まり上、行き止まり左
	右上･･･カーブ右上角、行き止まり上、行き止まり右
	右下･･･カーブ右下角、行き止まり下、行き止まり右
	左下･･･カーブ左下角、行き止まり下、行き止まり左

05 04 03 02 01 00
11 10 09 08 07 06
17 16 15 14 13 12
23 22 21 20 19 18
29 28 27 26 25 24
35 34 33 32 31 30

床配置アルゴリズム
6*6
for(nCnt < 6)
for(nCntField < 6)
nCnt * 6 + nCntField

外側を先に設定してから中を進めない進めるで設定する
rand

出入りできる道の位置を設定しておく
それが重なっているかどうかチェックする

for(そのtypeにある出入り道数)
if(道がつながっていない == 出入り道の位置から見て真っすぐの一定範囲内に道の位置が存在しない)
Count++

if(Count >= 出入り道数)
rotを変更。もしくはtypeを変更

それでもダメな場合、隣接するfieldのtypeを変更？


・マップタイプ別の移動可能判定

範囲内に入ったら床の向きと種類から曲がれる方向を判別
boolで行けるいけないを判断？

床の中心に入ったらその床の向きとタイプから真っすぐ行けるのか曲がれるのかをtypeで判別
真っすぐ行けて曲がれる場合入力がない限りはそのまま
真っすぐしかいけない場合は入力を無効しそのまま
真っすぐ行けないが曲がれる場合は強制的に曲がる
真っすぐ行けず曲がることもできない場合は折り返す


・ゴミ箱モデル階層構造
ゴミ箱からトリモチ的な手が出る
⇒手が伸びるくっつく引き寄せる


・マップ床配置

１＊１をランダムで６＊６？に配置
細い道などは後程
プレイヤーの移動速度が微妙なため、デバッグでスピードの調整をできるように
ゴミをどれくらいマップに配置するか

床パターン（合計１５パターン）
・直線（２パターン）･･･真っすぐそのまま進む
・カーブ（４）･･･道なりに曲がる
・T字路（４）･･･ある範囲内（↓と同じ）で入力した方向へ曲がる。入力しなかった場合はランダムでどちらかに曲がる
・十字路（１）･･･半分とその半分の間にいるときに入力された方向へ曲がる。入力がなかった場合は真っすぐ
・行き止まり（４）･･･その場で折り返す。入力で折り返しはなし。自動。

ふざけたことをしているように見えてゴミを拾っているだけで環境に良いことをしている。

照準を左右キーで動かしそれにゴミが重なったらロックオン。
その後に分別のキーを入力するとロックオンされたゴミが分別される。
分別の種類を難易度で変更？

標準が重なったときにゴミの色が変化。分別のボタンでロックオンされてあらかじめ分別した状態にする
⇒分別ボタン長押しで一気にロックオン
その後に回収ボタンで一気にゴミ箱へ

ターゲットの判定と速度を上げる

ターゲット移動と分別のキーボードボタン配置は逆の方がいい

分別のボタン配置がわかりやすいように画面上で表示する（ex:プレイヤーが３つの色つき分別用ゴミ箱を背負っている）
ゴミも分別しやすいよう分別の色を付けておく

ゴミは真ん中より端の方
本当はプラスチックだけどめんどくさいから燃えるゴミにすてちゃえという心理を
間違えてプラスチックゴミを燃えるゴミでロックオンしちゃったけどそのまま捨てちゃえで表す

右・真ん中・左にランダムで仮配置

小道⇒路地裏みたいなところになるためゴミが多い。その分ロックオンムズイ。曲がるときのタイミングがシビアになる。

フィーバータイム⇒ゴミが大量発生。一度にロックオンできるゴミの量が増える。

ゴミステーション⇒プレイヤーのとある前方範囲に入っったら捨てることができる。
ゴミの動きはプレイヤーへの動きと同じで良い？ゴミはプレイヤーに入っても破棄しない。
非表示にしておいて、ゴミステーションで再び表示する。

捨てるボタンいる？
ロックオン後一定時間経過で自動で捨てる。捨てるボタンはゴミステーションへのボタンに